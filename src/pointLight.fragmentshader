#version 330 core

in vec4 position;
in vec4 normal;

out vec4 color;

uniform vec3 focoPos;
uniform vec3 camPos;
uniform vec3 luzDifusa;
uniform vec3 luzAmbiental;
uniform vec3 luzEspecular;
uniform float roughness;

void main(){
	vec3 colorOriginal = vec3(0,0,1);
	//ambiental
	vec4 ambiental = vec4(luzAmbiental * colorOriginal,1);

	//difusa
	vec3 L = normalize(focoPos - position.xyz);
	float diff = max(dot(normal.xyz, L), 0);
	vec4 difusa = vec4(luzDifusa * diff * colorOriginal,1);

	//especular
	vec3 V = normalize(camPos - position.xyz);
	vec3 R = reflect(-L, normal.xyz);
	float esp = max(dot(R,V), 0);
	esp = pow(esp, roughness);
	vec4 especular =vec4( luzEspecular * esp ,1);

	//atenuacion
	float c1, c2, c3;
	c1 = 1.0f;
	c2 = 0.045;
	c3 = 0.0075f;
	float d = length(focoPos - position.xyz);
	float factorAtenuacion = 1 / (1 + c2*d + c3*(d*d));


	color = factorAtenuacion * (ambiental + difusa + especular);
}