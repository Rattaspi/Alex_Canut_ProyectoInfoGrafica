#version 330 core
out vec4 color;

in vec4 normal;
in vec4 position;

uniform float luzAmbiental;
uniform vec3 cameraPos;
uniform vec3 incidenciaLuz;
uniform float intensidadDifusa;
uniform float coeficienteReflexionDifuso;
uniform float intensidadEspecular;
uniform float coeficienteReflexionEspecular;
uniform float roughness;
uniform float atenuacion;

void main(){
	color = vec4(0,0,1,1);
	vec4 color2 = vec4(0,0,1,1);
	vec4 Ldif = vec4(0,0,0,0);
	vec4 Lspec = vec4(0,0,0,0);
	vec4 normalNormal = normalize(normal);

	//color especular blanco y los demas en azul.

	vec4 Lamb = color2 * luzAmbiental;
	Ldif = color2 * (intensidadDifusa * dot(normalize(incidenciaLuz), normalNormal.xyz));
	vec3 R = 2 * dot(incidenciaLuz, normalNormal.xyz) * normalNormal.xyz - normalize(incidenciaLuz);
	Lspec = color * (intensidadEspecular * pow(dot(R, cameraPos), roughness));
	color = atenuacion * (Lamb + Ldif + Lspec);
	//color = vec4(0,0,1,1);
}